// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolApi.Persistence;

namespace SchoolApi.Migrations
{
    [DbContext(typeof(SchoolAPiDbContext))]
    partial class SchoolAPiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolApi.Models.PhoneNumberModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserModelId");

                    b.Property<long>("userPhoneAll");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("Users_Phone_Number");
                });

            modelBuilder.Entity("SchoolApi.Models.Photos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.Property<int>("UserModelId");

                    b.Property<bool>("isMain");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("SchoolApi.Models.StudDetailAttendanceModel", b =>
                {
                    b.Property<int>("StudentDetailsModelId");

                    b.Property<int>("StudentAttendanceModelId");

                    b.HasKey("StudentDetailsModelId", "StudentAttendanceModelId");

                    b.HasIndex("StudentAttendanceModelId");

                    b.ToTable("StudentAttendance");
                });

            modelBuilder.Entity("SchoolApi.Models.StudentAttendanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttendanceDate");

                    b.Property<DateTime>("createdTime");

                    b.Property<string>("studentName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("studentRoll");

                    b.Property<string>("updatedBy");

                    b.Property<DateTime>("updatedTime");

                    b.HasKey("Id");

                    b.ToTable("Student_Attendance_All");
                });

            modelBuilder.Entity("SchoolApi.Models.StudentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Gender");

                    b.Property<string>("StudentUrl");

                    b.Property<int>("UserModelId");

                    b.Property<DateTime>("createdTime");

                    b.Property<string>("studentName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("studentRoll");

                    b.Property<string>("updatedBy");

                    b.Property<DateTime>("updatedTime");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("SchoolApi.Models.UserDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Createdat");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FatherName");

                    b.Property<string>("MotherName");

                    b.Property<int>("UserModelId");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("SchoolApi.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Designation");

                    b.Property<string>("Gender");

                    b.Property<DateTime>("LastActive");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<byte[]>("passwordHash")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<byte[]>("passwordSalt");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolApi.Models.PhoneNumberModel", b =>
                {
                    b.HasOne("SchoolApi.Models.UserModel", "UserModel")
                        .WithMany("phoneNumber")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SchoolApi.Models.Photos", b =>
                {
                    b.HasOne("SchoolApi.Models.UserModel", "UserModel")
                        .WithMany("Photos")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SchoolApi.Models.StudDetailAttendanceModel", b =>
                {
                    b.HasOne("SchoolApi.Models.StudentAttendanceModel", "StudentAttendanceModel")
                        .WithMany()
                        .HasForeignKey("StudentAttendanceModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolApi.Models.StudentModel", "StudentDetailsModel")
                        .WithMany("Features")
                        .HasForeignKey("StudentDetailsModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SchoolApi.Models.StudentModel", b =>
                {
                    b.HasOne("SchoolApi.Models.UserModel", "userModel")
                        .WithMany("StudentDetails")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SchoolApi.Models.UserDetailsModel", b =>
                {
                    b.HasOne("SchoolApi.Models.UserModel", "UserModel")
                        .WithMany("UserDetails")
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
